<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>World Map | lcgodoy</title>
    <link>lcgodoy.github.io/categories/world-map/</link>
      <atom:link href="lcgodoy.github.io/categories/world-map/index.xml" rel="self" type="application/rss+xml" />
    <description>World Map</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2021</copyright><lastBuildDate>Tue, 24 Apr 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>lcgodoy.github.io/img/logo2.png</url>
      <title>World Map</title>
      <link>lcgodoy.github.io/categories/world-map/</link>
    </image>
    
    <item>
      <title>My first #TidyTuesday - A world map GIF</title>
      <link>lcgodoy.github.io/post/2018/04/2018-04-13-world_map_gig/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      <guid>lcgodoy.github.io/post/2018/04/2018-04-13-world_map_gig/</guid>
      <description>&lt;h2 id=&#34;about-tidytuesday&#34;&gt;About TidyTuesday&lt;/h2&gt;
&lt;p&gt;Tidy Tuesday is a nice initiative from the &lt;a href=&#34;https://twitter.com/R4DScommunity&#34;&gt;R4DS online community&lt;/a&gt;.
The goal is is to apply your R skills, get feedback, explore other’s work, and connect with the
greater RStats community.&lt;br&gt;
It&amp;rsquo;s also my blogging motivation.&lt;/p&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The challenge&lt;/h2&gt;
&lt;p&gt;This post is about the following challenge&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The dataset contains mortality rates for all countries from 1990 to 2016, the aim
was build a meaningful visualization. My idea was show the variation of a specific
cause of death through &lt;em&gt;space-time&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can download the data from &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/global_mortality.xlsx&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;p&gt;To achieve my goal I used the packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dplyr&lt;/code&gt; - data manipulation;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggplot2&lt;/code&gt; - graphs;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggthemes&lt;/code&gt; - map theme;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sf&lt;/code&gt; - spatial data manipulation. This package interacts beautifully with &lt;code&gt;ggplot2&lt;/code&gt;
and &lt;code&gt;dplyr&lt;/code&gt;, which makes spatial data manipulation and visualization very easy (and tidy);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magick&lt;/code&gt; - build the GIF&amp;rsquo;s;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magrittr&lt;/code&gt; - it&amp;rsquo;s not just the &lt;code&gt;%&amp;gt;%&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readxl&lt;/code&gt; - reading &lt;code&gt;.xlsx&lt;/code&gt; files;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maps&lt;/code&gt; - world map &amp;lsquo;shape&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/WireMonkey&#34;&gt;Alyssa Goldberg&lt;/a&gt; suggestion:
You can use &lt;code&gt;gganimate&lt;/code&gt; instead of &lt;code&gt;magick&lt;/code&gt;, it will need fewer lines of code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reading-and-manipulating-the-data&#34;&gt;Reading and manipulating the data&lt;/h2&gt;
&lt;p&gt;The following code is used to read and make the first manipulations at the data
provided for the challenge. Here, &lt;code&gt;mutate&lt;/code&gt; and &lt;code&gt;case_when&lt;/code&gt;, are being used to
modify the names of some countries to coincide with country names at the
map that will be used.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(sf)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)

data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readxl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/global_mortality.xlsx&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Antigua and Barbuda&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Antigua&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United States&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United States and Virgin Islands&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United Kingdom&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;England&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Scotland&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trinidad and Tobago&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trinidad&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; country
  ))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we need a map and merge our data with it. This would be a little bit more
difficult if we did not have the &lt;code&gt;sf&lt;/code&gt; package.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;world_map &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;st_as_sf&lt;/span&gt;(maps&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;, plot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we will merge the data from the map with the data provided by the R4DS
challenge. Thank&amp;rsquo;s to &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;sf&lt;/code&gt;, we can do this with the following
lines of code. Here the variables &lt;code&gt;ID&lt;/code&gt; from &lt;code&gt;world map&lt;/code&gt; and &lt;code&gt;country&lt;/code&gt; from
&lt;code&gt;data&lt;/code&gt; must be equal at each country.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;map_years &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; world_map &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;full_join&lt;/span&gt;(data, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;country&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;creating-a-gif&#34;&gt;Creating a GIF&lt;/h2&gt;
&lt;h3 id=&#34;building-the-gif_map-function&#34;&gt;Building the &lt;code&gt;gif_map&lt;/code&gt; function&lt;/h3&gt;
&lt;p&gt;To make easier to create a &lt;em&gt;GIF&lt;/em&gt; for different causes of death, I built the following
function. The inputs are the data and a string representing the name of the variable
corresponding to the cause of death you want to visualize.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;gif_map &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(data, cause_of_death) {
  &lt;span style=&#34;color:#75715e&#34;&gt;# Create limits to fix the scales&lt;/span&gt;
  fill_lim &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;range&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;%$%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(cause_of_death), na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# Split the data set for different years&lt;/span&gt;
  data_list &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(data, data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year)
  
  out &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(data_list, &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(data, cause_of_death, fill_lim){
    p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(cause_of_death))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_sf&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_gradient&lt;/span&gt;(low &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ffefef&amp;#34;&lt;/span&gt;, high &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#720000&amp;#34;&lt;/span&gt;, space &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lab&amp;#34;&lt;/span&gt;,
                          na.value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#c6c6c6&amp;#34;&lt;/span&gt;, guide &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;colourbar&amp;#34;&lt;/span&gt;, 
                          limits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(fill_lim[1], fill_lim[2]),
                          name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cause_of_death) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      ggthemes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme_map&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(panel.grid.major &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_line&lt;/span&gt;(colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;),
            legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(p)
  }, cause_of_death, fill_lim)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-it&#34;&gt;Using it&lt;/h3&gt;
&lt;p&gt;Now that we&amp;rsquo;ve already built a function, use it&amp;rsquo;s very easy.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Specifying the width, height and resolution&lt;/span&gt;
img &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_graph&lt;/span&gt;(width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;350&lt;/span&gt;, res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# gif for Homicide mortality rate&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;gif_map&lt;/span&gt;(map_years, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Homicide (%)&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;dev.off&lt;/span&gt;()

&lt;span style=&#34;color:#75715e&#34;&gt;# building a gif with 8 frames per second&lt;/span&gt;
animation &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_animate&lt;/span&gt;(img, fps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Visualize it&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(animation)

&lt;span style=&#34;color:#75715e&#34;&gt;# Save it&lt;/span&gt;
magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_write&lt;/span&gt;(animation, path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;img/homicide.gif&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;gganimate-code-outdated&#34;&gt;&lt;code&gt;gganimate&lt;/code&gt; code (outdated)&lt;/h2&gt;
&lt;p&gt;There is an option to create the GIF with &lt;code&gt;gganimate&lt;/code&gt;, the syntax is very simple
and it is attached at the following block of code.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(gganimate)
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(map_years, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;`Homicide &lt;/span&gt;(%)`, frame &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; years)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_sf&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_gradient&lt;/span&gt;(low &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ffefef&amp;#34;&lt;/span&gt;, high &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#720000&amp;#34;&lt;/span&gt;, space &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lab&amp;#34;&lt;/span&gt;,
                          na.value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#c6c6c6&amp;#34;&lt;/span&gt;, guide &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;colourbar&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      ggthemes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme_map&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(panel.grid.major &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_line&lt;/span&gt;(colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;),
            legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;final-remarks&#34;&gt;Final remarks&lt;/h2&gt;
&lt;p&gt;At this post, I showed how to build GIF’s considering space-time data with a few
lines of code. I hope that you enjoyed the post, and if you have any doubt or
consideration, you can contact me at twitter or email.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
