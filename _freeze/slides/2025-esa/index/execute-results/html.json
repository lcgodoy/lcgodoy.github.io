{
  "hash": "1d0c4d51402ef697d0086e3f85a19951",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  `drmr`: A Bayesian approach to Dynamic Range Models in `R`\nsubtitle: |\n  Available at [lcgodoy.me/slides/2025-esa/](https://lcgodoy.me/slides/2025-esa/)\nauthor:\n  - name: Lucas da Cunha Godoy\n    orcid: 0000-0003-4265-972X\n    email: |\n      ldcgodoy@ucsc.com\n    affiliations: EEB Department, UCSC\ndate: 2025-07-29\nbibliography: references.bib\ncsl: styles/asa.csl\nexecute: \n  cache: false\nformat:\n  revealjs:\n    center: true\n    theme: [styles/esa.scss]\n    filters:\n      - styles/appendix.lua\n    embed-resources: true\n    self-contained-math: true\n    toc: true\n    toc-depth: 1\n    smaller: false\n    slide-number: c/t\n    navigation-mode: linear\n    code-overflow: wrap\n---\n\n\n::: {.cell}\n\n:::\n\n\n# Introduction\n\n## The Challenge & Limits of SDMs\n\n* [Critical Challenge]{.important2}: Predicting species' responses to global\n  environmental change is vital for conservation and management.\n\n* [Usual Tool]{.important2}: Species Distribution Models (SDMs) have been the\n  workhorse, [correlating]{.important} occurrences with [environmental\n  variables]{.important}.\n\n* [Limitations of SDMs]{.important2}:\n    * Struggle to predict responses under [novel future]{.important} conditions\n      [@pagel2012forecasting].\n    * [Lack Mechanism]{.important2}: They [do not explicitly]{.important} model\n      the [underlying biological processes]{.important}.\n    * [Equilibrium Assumption]{.important2}: Often violated\n      [@guisan2005predicting].\n\n## Dynamic Range Models (DRMs): A Mechanistic Approach\n\n* [DRMs]{.important} explicitly [incorporate demographic processes]{.important}\n  that drive range dynamics [@pagel2012forecasting].\n\n* Allows linking [environmental]{.important} drivers directly to [specific\n  processes]{.important}.\n\n* Potential for more [robust forecasting]{.important} under [novel]{.important}\n  conditions.\n\n* [Why are they rarely in practice?]{.important2} Despite conceptual appeal,\n  DRMs have been underutilized due to their [complexity]{.important} and\n  [computational challenges]{.important} to fit these models.\n\n## Introducing `drmr`: Making DRMs Accessible\n\n* [Goal]{.important2}: Bridge the gap between DRM potential and practical\n  application.\n\n* [Key Features]{.important2}:\n    * Makes age-structured DRMs readily available in a Bayesian framework.\n    * Leverages `Stan` via `cmdstanr` for efficient fitting\n      [@gabry2024cmdstanr].\n    * User-friendly interface.\n    * Easily relate environmental drivers to specific recruitment and survival.\n\n# Age-structured DRM\n\n## Setup & Notation\n\n* $Y_{a, t, i}$: [Unobserved density]{.important} of individuals of age $a$,\n  time $t$ and site $i$.\n\n* $Y_{t, i} = \\sum_{a} Y_{a, t, i}$: [Observed density]{.important} of\n  individuals (all ages) at time $t$ and site $i$.\n\n* $\\lambda_{a, t, i}$: [Expected age-specific density]{.important}.\n  * [Biological processes]{.important2} (recruitment, survival, and movement)\n    are encoded through these parameters.\n\n* $\\mu_{t, i} = \\sum_{a} \\lambda_{a, t, i}$: [Expected total\n  density]{.important}.\n  \n* $\\rho_{t, i} = \\mathrm{P}(Y_{t, i} = 0)$: [Probability of\n  absence]{.important}.\n\n\n## Modeling assumption: Zero-augmented probability density function (pdf)\n\n$$ f(y_{t, i} \\mid \\mu_{t, i}, \\phi, \\rho_{t, i}) = \\begin{cases} \\rho_{t, i}, &\n  \\text{ if } y_{t, i} = 0, \\\\ (1 - \\rho_{t, i}) g(y_{t, i} \\mid \\mu_{t, i},\n  \\phi), & \\text{ if } y_{t, i} > 0. \\end{cases} $$\n\n* $y_{t, i}$ is a realization of $Y_{t, i}$.\n\n* $g(\\cdot \\mid \\mu_{t, i}, \\phi)$ is the [pdf]{.important} of a [continuous\n  probability distribution]{.important}.\n  \n* $\\phi$ is a nuisance parameter.\n\n## Let's look at some model assumptions! {visibility=\"uncounted\"}\n\n![](img/meme.jpeg){width=75%}\n\n## Demographic processes\n\n```{mermaid}\ngraph TD\n    subgraph \"Demographic processes\"\n        %% Inputs and Parameters for lambda1\n        xr[\"$$\\mathbf{x}^{(r)}_{t, i}$$\"] --> lambda1((\"$$\\lambda_{1, t, i}$$\"));\n        betar((\"$$\\boldsymbol{\\beta}_r$$\")) --> lambda1;\n        zr((\"$$z^{(r)}_{t, i}$$\")) --> lambda1;\n\n        %% Recursive part for lambda_a\n        subgraph \"Time t-1\"\n            xs[\"$$\\mathbf{x}^{(s)}_{t - 1, i}$$\"] --> s_prev;\n            betas((\"$$\\boldsymbol{\\beta}_s$$\")) --> s_prev;\n            zs((\"$$z^{(s)}_{t - 1, i}$$\")) --> s_prev;\n            f[\"$$f_{a - 1, t - 1}$$\"] --> s_prev;\n            lambda_prev((\"$$\\lambda_{a - 1, t - 1, i}$$\"))\n            s_prev((\"$$s_{a - 1, t - 1, i}$$\"))\n        end\n        \n        lambda_prev --> lambda_a((\"$$\\lambda_{a, t, i}$$\"));\n        s_prev --> lambda_a;\n    end\n\n    %% Mean calculation\n    lambda_a --> mu((\"$$\\mu_{t, i}$$\"));\n\nsubgraph \"Zero-augmentation\"\n        xt[\"$$\\mathbf{x}^{(p)}_{t, i}$$\"] --> rho((\"$$\\rho_{t, i}$$\"));\n        betat((\"$$\\boldsymbol{\\beta}_p$$\")) --> rho;\n    end\n\n    %% Final Observation\n    mu --> Y{\"$$Y_{t, i}$$\"};\n\n    %% Other components\n    phi((\"$$\\phi$$\")) --> Y;\n    rho --> Y;\n```\n\n## Code & workflow\n\n![](img/fitting.png)\n\n<!-- ## Toggles and model complexity -->\n\n<!-- | Toggle     | Description                                                                                                                | Default State                   | -->\n<!-- |------------|----------------------------------------------------------------------------------------------------------------------------|---------------------------------| -->\n<!-- | `rho_mu`   | Use the complementary log-log (cloglog) link function for absence probability. If off, the logistic link function is used. | On                              | -->\n<!-- | `cloglog`  | Use the complementary log-log (cloglog) link function for absence probability. If off, the logistic link function is used. | Off                             | -->\n<!-- | `movement` | Enable the movement routine as described.                                                                                  | Off                             | -->\n<!-- | `est_surv` | Estimate survival probabilities within the model.                                                                          | On                              | -->\n<!-- | `est_init` | Estimate $\\lambda$ initial values.                                                                                         | Off (this one has many options) | -->\n<!-- | `minit`    | Initial values driven by mortality rates.                                                                                  | Off                             | -->\n<!-- | `iid_re`   | Include an IID random effect.                                                                                              | `\"none\"`                        | -->\n<!-- | `ar_re`    | Include an AR(1) random effect.                                                                                            | `\"none\"`                        | -->\n<!-- | `sp_re`    | Include an iCAR random effect.                                                                                             | `\"none\"`                        | -->\n\n\n# Illustration with real data\n\n## Summer Flounder Dataset\n\n* An example analysis uses [Summer flounder]{.important} (_Paralichthys\n  dentatus_) data from 1982-2016 NOAA [bottom trawl surveys]{.important}\n  [@fredston2025dynamic] to illustrate the [package's features]{.important}.\n\n* The data spans the US Atlantic coast (Cape Hatteras, NC\n  to the Canada/Maine border) and was [aggregated from individual hauls into 10\n  latitudinal patches]{.important} with varying areas.\n\n* [Response variable]{.important2}: Density (count per unit area).\n\n* [Environmental drivers]{.important2}: SST and SBT.\n\n## Models fitted to the data\n\n| Model          | Non-neg. PDF | $\\rho_{i, t}$              | Recruitment (or Density) | Survival                  |\n|:---------------|:------------:|:--------------------------:|--------------------------|---------------------------|\n| **DRM (rec)**  | Gamma        | Effort + estimated density | SST + SST^2^ + AR(1)     | Intercept + $f_{a, t}$    |\n| **DRM (surv)** | Gamma        | Effort + estimated density | AR(1)                    | SBT + SBT^2^ + $f_{a, t}$ |\n| **SDM (GLM)**  | LogNormal    | Effort                     | SST + SST^2^             |                           |\n\n## Code for DRM (rec)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrm_rec <-\n  fit_drm(.data = dat_train,\n          y_col = \"dens\", ## response variable: density\n          time_col = \"year\", ## vector of time points\n          site_col = \"patch\",\n          family = \"gamma\", ## other options: lognormal, loglogistic\n          seed = 202505,\n          formula_zero = ~ 1 + c_hauls,\n          formula_rec = ~ 1 + c_sst + I(c_sst * c_sst),\n          formula_surv = ~ 1,\n          f_mort = f_train,\n          n_ages = NROW(f_train),\n          adj_mat = adj_mat, ## A matrix for movement routine\n          ages_movement = c(0, 0,\n                            rep(1, 12),\n                            0, 0), ## ages allowed to move\n          .toggles = list(ar_re = \"rec\", ## other options: \"surv\", \"dens\"\n                          movement = 1,\n                          est_surv = 1,\n                          est_init = 0,\n                          minit = 1),\n          .priors = list(pr_phi_a = 1, pr_phi_b = .1,\n                         pr_alpha_a = 4.2, pr_alpha_b = 5.8,\n                         pr_zeta_a = 7, pr_zeta_b = 3))\n```\n:::\n\n\n## Code for DRM (surv)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrm_surv <-\n  fit_drm(.data = dat_train,\n          y_col = \"dens\", ## response variable: density\n          time_col = \"year\", ## vector of time points\n          site_col = \"patch\",\n          family = \"gamma\", ## other options: lognormal, loglogistic\n          seed = 202505,\n          formula_zero = ~ 1 + c_hauls,\n          formula_rec = ~ 1,\n          formula_surv = ~ 1 + c_sbt + I(c_sst * c_sbt),\n          f_mort = f_train,\n          n_ages = NROW(f_train),\n          adj_mat = adj_mat, ## A matrix for movement routine\n          ages_movement = c(0, 0,\n                            rep(1, 12),\n                            0, 0), ## ages allowed to move\n          .toggles = list(ar_re = \"rec\", ## other options: \"surv\", \"dens\"\n                          movement = 1,\n                          est_surv = 1,\n                          est_init = 0,\n                          minit = 1),\n          .priors = list(pr_phi_a = 1, pr_phi_b = .1,\n                         pr_alpha_a = 4.2, pr_alpha_b = 5.8,\n                         pr_zeta_a = 7, pr_zeta_b = 3))\n```\n:::\n\n\n\n## Effect of environmental variables on specific processes\n\n* Recruitment and SST:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewdata_rec <- data.frame(c_sst =\n                            seq(from = quantile(dat_train$c_sst, .05),\n                                to = quantile(dat_train$c_sst, .95),\n                                length.out = 200))\n\nrec_samples <- marg_rec(drm_rec, newdata_rec)\n```\n:::\n\n\n* Survival and SBT:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewdata_surv <- data.frame(c_sbt =\n                             seq(from = quantile(dat_train$c_sbt, .05),\n                                 to = quantile(dat_train$c_sbt, .95),\n                                 length.out = 200))\n\nsurv_samples <- marg_surv(drm_surv, newdata_surv)\n```\n:::\n\n\n## Effect of environmental variables\n\n\n::: {.cell layout-ncol=\"2\" height='80%'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/plot-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/plot-2.png){width=960}\n:::\n:::\n\n\n## Forecasting\n\n* The `predict_drm` function requires at least three arguments: \n  * `drm`: Output of a `fit_drm` call\n  * `new_data`: A `data.frame` where we seek to obtain predictions\n  * `seed`: For reproducibility\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforecast_rec <- predict_drm(drm = drm_rec,                         # Required\n                            new_data = dat_test,                   # Required\n                            seed = 152,                            # Required\n                            f_test = f_test,                       # Optional\n                            past_data = filter(dat_train,          # Optional\n                                               year == max(year)))\n```\n:::\n\n\n* When $f_{a, t}$ is used at the time of model fit, we also need to provide\n  `f_test` to `predict_drm`.\n\n* `past_data` is necessary when survival is a function of environmental\n  variables.\n  \n## Forecasts visualization & comparison\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/forecast-1.png){width=960}\n:::\n:::\n\n\n::: {.notes}\n\n* DRM (rec): best point predictions (RMSE = 0.08)\n\n* DRM (rec): best interval predictions (IS = 0.74)\n\n* GLM: worst in all comparison metrics.\n\n:::\n\n# Concluding remarks\n\n## Highlights\n\n* The `drmr` substantially lowers the barrier for ecologists to use the DRM in\n  their applications.\n\n* The code is easy to use and takes advantage of what has been developed for\n  `Stan`: visualization, diagnostic tools, and estimation.\n\n* `drmr` allows for empirically testing which processes are more important to\n  predict the distribution of a species.\n  \n* The more complex a model is, the more (and better) data we need to be able to\n  estimate those relationships.\n\n\n## Future work\n\n* Include population dynamic models that explicitly relate adult density to\n  recruitment (e.g., Ricker, Belverton-Holt)\n\n* GAM-like non-parametric relationships between processes and the environment\n\n* Support for length-composition data\n\n* More realistic movement routines\n\n## Acknowledgements\n\n* Malin, Alexa, Jude, Jeewantha, Mark, and many others.\n\n---\n\n### References {visibility=\"uncounted\"}\n\n<div id=\"refs\"></div>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}