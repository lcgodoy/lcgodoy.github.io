<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot2 | lcgodoy</title>
    <link>lcgodoy.github.io/tags/ggplot2/</link>
      <atom:link href="lcgodoy.github.io/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    <description>ggplot2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2021</copyright><lastBuildDate>Sat, 16 Jun 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>lcgodoy.github.io/img/logo2.png</url>
      <title>ggplot2</title>
      <link>lcgodoy.github.io/tags/ggplot2/</link>
    </image>
    
    <item>
      <title>A simple plot for correlation between response and explanatory variables</title>
      <link>lcgodoy.github.io/post/2018/06/2018-06-16-correlation/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      <guid>lcgodoy.github.io/post/2018/06/2018-06-16-correlation/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this post, I’ll explain very briefly how to build a bar correlation plot
using &lt;code&gt;ggplot2&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;. Such graphs are interesting to examine the relationship
between an outcome of interest and explanatory variables, which is an important
task that precedes a regression analysis. It is important to remember that the
Pearson Correlation gives us a linear correlation. Consequently, a low linear
correlation doesn’t necessarily imply that there is no correlation between two
variables because such correlation can follow a non-linear pattern. Another very
interesting remark is the famous quote “Correlation is not causation!“.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The data used is the well-know &lt;code&gt;mtcars&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;straight-to-the-point&#34;&gt;Straight to the point&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s say that we are interested in verify which variables have high correlations
with &lt;code&gt;mpg&lt;/code&gt;. To do it, use the following piece of code to compute the correlation matrix
for the data and then select just first the line of the matrix corresponding to the
variable of interest, after this, exclude the first position of the resulting
vector.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)

correlation &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mtcars)[1,][&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;In matter of fact, the Pearson correlation is not adequated to measure the
correlation between variables that are not continuous. However, this is just a
toy example to show how to create a specific plot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now that the correlations have already been computed, store it in a &lt;code&gt;tibble&lt;/code&gt;
(this is not necessary, but make the code more organized). Note that the
&lt;code&gt;Covariates&lt;/code&gt; variable is being reordered by the correlation. As a consequence,
when the data is plotted, the bars will be ordered by their correlation
coefficient with the response variable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(Covariates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(correlation),
             Correlation &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; correlation) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(Covariates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(Covariates, 
                             levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates&lt;span style=&#34;color:#a6e22e&#34;&gt;[order&lt;/span&gt;(.$Correlation, 
                                                       decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T)]
  )
  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the following piece of code, the argument &lt;code&gt;fill = as.factor(sign(Correlation))&lt;/code&gt; will
give different colours for negative and positive correlations, these colours are specified
with &lt;code&gt;scale_fill_manual&lt;/code&gt;. Also, &lt;code&gt;stat = &#39;identity&#39;&lt;/code&gt; is necessary because the default of &lt;code&gt;geom_bar&lt;/code&gt;
assumes a count. In &lt;code&gt;geom_text&lt;/code&gt;, the argument &lt;code&gt;vjust&lt;/code&gt; needs to be multiplied by &lt;code&gt;sign(Correlation)&lt;/code&gt;
since the bars assume positive and negative values and such parameter needs to be different
for each of these two cases.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(df) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Correlation, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt;(Correlation))),
           stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;, width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.6&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Correlation, 
                label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;formatC&lt;/span&gt;(Correlation, digits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
            vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Correlation)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.6&lt;/span&gt;,
            color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;, 
            size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#9b1d1d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#129127&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; F) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;expression&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rho&lt;/span&gt;(X[i], Y)),
       x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;expression&lt;/span&gt;(X[i])) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_bw&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Note that the plot above can have another interesting ordering for the bars. If we
order the variable &lt;code&gt;Covariates&lt;/code&gt; by the absolute value of the &lt;code&gt;Correlation&lt;/code&gt;, then we’ll
have the plot ordered by the strength of the correlation, independently from its
signal. Sometimes such approach is more interesting and it is shown in the next
piece of code. There is just one subtle alteration, apply the function &lt;code&gt;abs&lt;/code&gt; to
&lt;code&gt;.$Correlation&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(Covariates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(Covariates, 
                                   levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates&lt;span style=&#34;color:#a6e22e&#34;&gt;[order&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;(.$Correlation), 
                                                             decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T)]))

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(df) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Correlation, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt;(Correlation))),
           stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;, width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.6&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Covariates, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Correlation, 
                label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;formatC&lt;/span&gt;(Correlation, digits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
            vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Correlation)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.6&lt;/span&gt;,
            color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;, 
            size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#9b1d1d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#129127&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; F) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;expression&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rho&lt;/span&gt;(X[i], Y)),
       x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;expression&lt;/span&gt;(X[i])) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_bw&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;So, that&amp;rsquo;s it. Hope that you liked.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My first #TidyTuesday - A world map GIF</title>
      <link>lcgodoy.github.io/post/2018/04/2018-04-13-world_map_gig/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      <guid>lcgodoy.github.io/post/2018/04/2018-04-13-world_map_gig/</guid>
      <description>&lt;h2 id=&#34;about-tidytuesday&#34;&gt;About TidyTuesday&lt;/h2&gt;
&lt;p&gt;Tidy Tuesday is a nice initiative from the &lt;a href=&#34;https://twitter.com/R4DScommunity&#34;&gt;R4DS online community&lt;/a&gt;.
The goal is is to apply your R skills, get feedback, explore other’s work, and connect with the
greater RStats community.&lt;br&gt;
It&amp;rsquo;s also my blogging motivation.&lt;/p&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The challenge&lt;/h2&gt;
&lt;p&gt;This post is about the following challenge&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The dataset contains mortality rates for all countries from 1990 to 2016, the aim
was build a meaningful visualization. My idea was show the variation of a specific
cause of death through &lt;em&gt;space-time&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can download the data from &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/global_mortality.xlsx&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h2&gt;
&lt;p&gt;To achieve my goal I used the packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dplyr&lt;/code&gt; - data manipulation;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggplot2&lt;/code&gt; - graphs;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggthemes&lt;/code&gt; - map theme;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sf&lt;/code&gt; - spatial data manipulation. This package interacts beautifully with &lt;code&gt;ggplot2&lt;/code&gt;
and &lt;code&gt;dplyr&lt;/code&gt;, which makes spatial data manipulation and visualization very easy (and tidy);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magick&lt;/code&gt; - build the GIF&amp;rsquo;s;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magrittr&lt;/code&gt; - it&amp;rsquo;s not just the &lt;code&gt;%&amp;gt;%&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readxl&lt;/code&gt; - reading &lt;code&gt;.xlsx&lt;/code&gt; files;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maps&lt;/code&gt; - world map &amp;lsquo;shape&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/WireMonkey&#34;&gt;Alyssa Goldberg&lt;/a&gt; suggestion:
You can use &lt;code&gt;gganimate&lt;/code&gt; instead of &lt;code&gt;magick&lt;/code&gt;, it will need fewer lines of code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reading-and-manipulating-the-data&#34;&gt;Reading and manipulating the data&lt;/h2&gt;
&lt;p&gt;The following code is used to read and make the first manipulations at the data
provided for the challenge. Here, &lt;code&gt;mutate&lt;/code&gt; and &lt;code&gt;case_when&lt;/code&gt;, are being used to
modify the names of some countries to coincide with country names at the
map that will be used.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(sf)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)

data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readxl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/global_mortality.xlsx&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Antigua and Barbuda&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Antigua&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United States&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United States and Virgin Islands&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United Kingdom&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;England&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Scotland&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,
    country &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trinidad and Tobago&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trinidad&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; country
  ))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we need a map and merge our data with it. This would be a little bit more
difficult if we did not have the &lt;code&gt;sf&lt;/code&gt; package.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;world_map &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;st_as_sf&lt;/span&gt;(maps&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;, plot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we will merge the data from the map with the data provided by the R4DS
challenge. Thank&amp;rsquo;s to &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;sf&lt;/code&gt;, we can do this with the following
lines of code. Here the variables &lt;code&gt;ID&lt;/code&gt; from &lt;code&gt;world map&lt;/code&gt; and &lt;code&gt;country&lt;/code&gt; from
&lt;code&gt;data&lt;/code&gt; must be equal at each country.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;map_years &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; world_map &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;full_join&lt;/span&gt;(data, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;country&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;creating-a-gif&#34;&gt;Creating a GIF&lt;/h2&gt;
&lt;h3 id=&#34;building-the-gif_map-function&#34;&gt;Building the &lt;code&gt;gif_map&lt;/code&gt; function&lt;/h3&gt;
&lt;p&gt;To make easier to create a &lt;em&gt;GIF&lt;/em&gt; for different causes of death, I built the following
function. The inputs are the data and a string representing the name of the variable
corresponding to the cause of death you want to visualize.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;gif_map &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(data, cause_of_death) {
  &lt;span style=&#34;color:#75715e&#34;&gt;# Create limits to fix the scales&lt;/span&gt;
  fill_lim &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;range&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;%$%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(cause_of_death), na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# Split the data set for different years&lt;/span&gt;
  data_list &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(data, data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year)
  
  out &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(data_list, &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(data, cause_of_death, fill_lim){
    p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(cause_of_death))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_sf&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_gradient&lt;/span&gt;(low &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ffefef&amp;#34;&lt;/span&gt;, high &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#720000&amp;#34;&lt;/span&gt;, space &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lab&amp;#34;&lt;/span&gt;,
                          na.value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#c6c6c6&amp;#34;&lt;/span&gt;, guide &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;colourbar&amp;#34;&lt;/span&gt;, 
                          limits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(fill_lim[1], fill_lim[2]),
                          name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cause_of_death) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      ggthemes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme_map&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(panel.grid.major &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_line&lt;/span&gt;(colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;),
            legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(p)
  }, cause_of_death, fill_lim)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-it&#34;&gt;Using it&lt;/h3&gt;
&lt;p&gt;Now that we&amp;rsquo;ve already built a function, use it&amp;rsquo;s very easy.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Specifying the width, height and resolution&lt;/span&gt;
img &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_graph&lt;/span&gt;(width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;350&lt;/span&gt;, res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# gif for Homicide mortality rate&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;gif_map&lt;/span&gt;(map_years, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Homicide (%)&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;dev.off&lt;/span&gt;()

&lt;span style=&#34;color:#75715e&#34;&gt;# building a gif with 8 frames per second&lt;/span&gt;
animation &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_animate&lt;/span&gt;(img, fps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Visualize it&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(animation)

&lt;span style=&#34;color:#75715e&#34;&gt;# Save it&lt;/span&gt;
magick&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;image_write&lt;/span&gt;(animation, path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;img/homicide.gif&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;gganimate-code-outdated&#34;&gt;&lt;code&gt;gganimate&lt;/code&gt; code (outdated)&lt;/h2&gt;
&lt;p&gt;There is an option to create the GIF with &lt;code&gt;gganimate&lt;/code&gt;, the syntax is very simple
and it is attached at the following block of code.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(gganimate)
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(map_years, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;`Homicide &lt;/span&gt;(%)`, frame &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; years)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_sf&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_gradient&lt;/span&gt;(low &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ffefef&amp;#34;&lt;/span&gt;, high &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#720000&amp;#34;&lt;/span&gt;, space &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lab&amp;#34;&lt;/span&gt;,
                          na.value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#c6c6c6&amp;#34;&lt;/span&gt;, guide &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;colourbar&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      ggthemes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme_map&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;year))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(panel.grid.major &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_line&lt;/span&gt;(colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;.2&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;),
            legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;final-remarks&#34;&gt;Final remarks&lt;/h2&gt;
&lt;p&gt;At this post, I showed how to build GIF’s considering space-time data with a few
lines of code. I hope that you enjoyed the post, and if you have any doubt or
consideration, you can contact me at twitter or email.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
