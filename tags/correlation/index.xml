<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Correlation | lcgodoy</title>
    <link>lcgodoy.github.io/tags/correlation/</link>
      <atom:link href="lcgodoy.github.io/tags/correlation/index.xml" rel="self" type="application/rss+xml" />
    <description>Correlation</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2021</copyright><lastBuildDate>Sat, 16 Jun 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>lcgodoy.github.io/img/logo2.png</url>
      <title>Correlation</title>
      <link>lcgodoy.github.io/tags/correlation/</link>
    </image>
    
    <item>
      <title>A simple plot for correlation between response and explanatory variables</title>
      <link>lcgodoy.github.io/post/2018/06/2018-06-16-correlation/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      <guid>lcgodoy.github.io/post/2018/06/2018-06-16-correlation/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;In this post, I’ll explain very briefly how to build a bar correlation plot
using &lt;code&gt;ggplot2&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;. Such graphs are interesting to examine the relationship
between an outcome of interest and explanatory variables, which is an important
task that precedes a regression analysis. It is important to remember that the
Pearson Correlation gives us a linear correlation. Consequently, a low linear
correlation doesn’t necessarily imply that there is no correlation between two
variables because such correlation can follow a non-linear pattern. Another very
interesting remark is the famous quote “Correlation is not causation!“.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The data used is the well-know &lt;code&gt;mtcars&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;straight-to-the-point&#34;&gt;Straight to the point&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s say that we are interested in verify which variables have high correlations
with &lt;code&gt;mpg&lt;/code&gt;. To do it, use the following piece of code to compute the correlation matrix
for the data and then select just first the line of the matrix corresponding to the
variable of interest, after this, exclude the first position of the resulting
vector.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)
library(ggplot2)
library(magrittr)

correlation &amp;lt;- cor(mtcars)[1,][-1]
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;In matter of fact, the Pearson correlation is not adequated to measure the
correlation between variables that are not continuous. However, this is just a
toy example to show how to create a specific plot.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that the correlations have already been computed, store it in a &lt;code&gt;tibble&lt;/code&gt;
(this is not necessary, but make the code more organized). Note that the
&lt;code&gt;Covariates&lt;/code&gt; variable is being reordered by the correlation. As a consequence,
when the data is plotted, the bars will be ordered by their correlation
coefficient with the response variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- tibble(Covariates = names(correlation),
             Correlation = correlation) %&amp;gt;% 
  mutate(Covariates = factor(Covariates, 
                             levels = Covariates[order(.$Correlation, 
                                                       decreasing = T)]
  )
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the following piece of code, the argument &lt;code&gt;fill = as.factor(sign(Correlation))&lt;/code&gt; will
give different colours for negative and positive correlations, these colours are specified
with &lt;code&gt;scale_fill_manual&lt;/code&gt;. Also, &lt;code&gt;stat = &#39;identity&#39;&lt;/code&gt; is necessary because the default of &lt;code&gt;geom_bar&lt;/code&gt;
assumes a count. In &lt;code&gt;geom_text&lt;/code&gt;, the argument &lt;code&gt;vjust&lt;/code&gt; needs to be multiplied by &lt;code&gt;sign(Correlation)&lt;/code&gt;
since the bars assume positive and negative values and such parameter needs to be different
for each of these two cases.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(df) +
  geom_bar(aes(x = Covariates, y = Correlation, fill = as.factor(sign(Correlation))),
           stat = &#39;identity&#39;, width = .6) +
  geom_text(aes(x = Covariates, y = Correlation, 
                label = formatC(Correlation, digits = 2)),
            vjust = sign(df$Correlation)*1.6,
            color = &#39;white&#39;, 
            size = 3.5)+
  scale_fill_manual(values = c(&#39;#9b1d1d&#39;, &#39;#129127&#39;)) +
  guides(fill = F) +
  labs(y = expression(rho(X[i], Y)),
       x = expression(X[i])) +
  theme_bw()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;lcgodoy.github.io/post/2018/06/2018-06-16-correlation_files/figure-html/plot1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note that the plot above can have another interesting ordering for the bars. If we
order the variable &lt;code&gt;Covariates&lt;/code&gt; by the absolute value of the &lt;code&gt;Correlation&lt;/code&gt;, then we’ll
have the plot ordered by the strength of the correlation, independently from its
signal. Sometimes such approach is more interesting and it is shown in the next
piece of code. There is just one subtle alteration, apply the function &lt;code&gt;abs&lt;/code&gt; to
&lt;code&gt;.$Correlation&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df %&amp;lt;&amp;gt;% mutate(Covariates = factor(Covariates, 
                                   levels = Covariates[order(abs(.$Correlation), 
                                                             decreasing = T)]))

ggplot(df) +
  geom_bar(aes(x = Covariates, y = Correlation, fill = as.factor(sign(Correlation))),
           stat = &#39;identity&#39;, width = .6) +
  geom_text(aes(x = Covariates, y = Correlation, 
                label = formatC(Correlation, digits = 2)),
            vjust = sign(df$Correlation)*1.6,
            color = &#39;white&#39;, 
            size = 3.5)+
  scale_fill_manual(values = c(&#39;#9b1d1d&#39;, &#39;#129127&#39;)) +
  guides(fill = F) +
  labs(y = expression(rho(X[i], Y)),
       x = expression(X[i])) +
  theme_bw()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;lcgodoy.github.io/post/2018/06/2018-06-16-correlation_files/figure-html/plot2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So, that&amp;rsquo;s it. Hope that you liked.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
