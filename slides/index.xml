<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides | lcgodoy</title>
    <link>lcgodoy.me/slides/</link>
      <atom:link href="lcgodoy.me/slides/index.xml" rel="self" type="application/rss+xml" />
    <description>Slides</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2022</copyright><lastBuildDate>Tue, 05 Feb 2019 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Slides</title>
      <link>lcgodoy.me/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>lcgodoy.me/slides/example/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
   One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>lcgodoy.me/slides/csds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>lcgodoy.me/slides/csds/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Voronoi Data Linkage&lt;/title&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;   Lucas da Cunha Godoy   Luis Gustavo Silva e Silva   Douglas Roberto Mesquita    1st Conference on Statistics and Data Science   Salvador - Bahia, Brasil&#34; /&gt;
    &lt;link href=&#34;libs/remark-css/ninjutsu.css&#34; rel=&#34;stylesheet&#34; /&gt;
    &lt;link href=&#34;libs/font-awesome/css/fontawesome-all.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style/shinobi.css&#34; type=&#34;text/css&#34; /&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style/ninpo.css&#34; type=&#34;text/css&#34; /&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;textarea id=&#34;source&#34;&gt;
class: center, middle, inverse, title-slide

# Voronoi Data Linkage
## Extracting Information from Polygons to Points
### &lt;br&gt;&lt;br&gt; Lucas da Cunha Godoy &lt;br&gt; Luis Gustavo Silva e Silva &lt;br&gt; Douglas Roberto Mesquita &lt;br&gt;&lt;br&gt; 1st Conference on Statistics and Data Science &lt;br&gt; Salvador - Bahia, Brasil &lt;br&gt;
### &lt;br&gt;2018/10/16

---




class: middle bg-main1 hide-slide-number

.outline[
## Outline

* Introduction
* Method
* Application
* Conclusion
]

---


class: bg-main1 split-30 hide-slide-number

.column.bg-main3[
]
.column.slide-in-right[
.sliderbox.bg-main2.vmiddle[
.font5[Introduction]
]]

---

class: middle center bg-main1

# What is .text-hl[Data Linkage]?

--

&amp;lt;br&amp;gt;
## It is a method used to gather .text-hl[information] from 
## .text-hl[different sources], giving rise to .text-hl[richer datasets]

---

class: middle center bg-main2

# What is .text-hl[Spatial Join]?

--

&amp;lt;br&amp;gt;
## It is a .text-hl[GIS] operation used to .text-hl[combine information] 
## from different sources of .text-hl[spatial data] based on a given
## relationship between their spatial features

---

class: split-two

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
]]
]]

.column.bg-main5[.content.vmiddle.center[
&lt;i class=&#34;fas  fa-question fa-5x &#34;&gt;&lt;/i&gt;
]]

---

class: split-two fade-row2-col1 fade-row3-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
]]
]]
.column.bg-white[.content.vmiddle.center[
![](index_files/figure-html/int_im1-1.svg)&amp;lt;!-- --&amp;gt;
]]

---

class: split-two fade-row2-col1 fade-row3-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
]]
]]
.column.bg-white[.content.vmiddle.center[
![](index_files/figure-html/int_im2-1.svg)&amp;lt;!-- --&amp;gt;
]]

---

class: split-two fade-row1-col1 fade-row3-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Points 
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
]]
]]

.column.bg-white[.content.vmiddle.center[
![](index_files/figure-html/int_im3-1.svg)&amp;lt;!-- --&amp;gt;
]]

---

class: split-two fade-row1-col1 fade-row3-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Points 
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
]]
]]

.column.bg-white[.content.vmiddle.center[
![](index_files/figure-html/int_im4-1.svg)&amp;lt;!-- --&amp;gt;
]]

---

class: split-two fade-row1-col1 fade-row2-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Points 
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
## Points &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
]]

.column.bg-white[.content.vmiddle.center[
![](index_files/figure-html/int_im5-1.svg)&amp;lt;!-- --&amp;gt;
]]

---

class: split-two fade-row1-col1 fade-row2-col1
count: false

.column.bg-main1[
.split-three[
.row.bg-main1[.content.vmiddle.center[
# Example 1
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
.row.bg-main2[.content.vmiddle.center[
# Example 2
## Polygons &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Points 
]]
.row.bg-main3[.content.vmiddle.center[
# Example 3
## Points &lt;i class=&#34;fas  fa-arrow-left &#34;&gt;&lt;/i&gt; Polygons
]]
]]

.column.bg-main5[.content.vmiddle.center[
&lt;i class=&#34;fas  fa-question fa-5x &#34;&gt;&lt;/i&gt;
]]

---


class: bg-main1 split-30 hide-slide-number

.column.bg-main3[
]
.column.slide-in-right[
.sliderbox.bg-main2.vmiddle[
.font5[Method]
]]

---

class: middle center bg-main1
count: false

# .text-hl[Definitions]

---

class: bg-main2

.split-two[
.column[.content.vmiddle.center[
![](index_files/figure-html/met_img1-1.svg)&amp;lt;!-- --&amp;gt;
]]

.column[.content.vmiddle.center[
`$$Y = \{Y_1, ..., Y_{n_y} \}$$`, where `\(Y_i \in A \forall i\)`.
]]
]

---

class: bg-main2

.split-two[
.column[
.content.vmiddle.center[
![](index_files/figure-html/met_img2-1.svg)&amp;lt;!-- --&amp;gt;
]]

.column[
.content.vmiddle.center[
`\(Z = \{Z_1, ..., Z_{n_z} \}\)`, where `\(\cup_{i = 1}^{n_z} Z_i = A\)`.

&amp;lt;br&amp;gt;

`\(X_k = \{X_{k,1}, ..., X_{k,p} \}\)` is a vector of continous variables belonging
to `\(Z_k\)`.
]]]

---

class: middle center bg-main1

# How can we .text-hl[extract data] from Spatial .text-hl[Polygons] to Spatial .text-hl[Points]?

--

Consider that we want to extract, or estimate, the variable `\(X_{., 1}\)` observed in
the spatial polygons `\(\{Z\}\)` for each point `\(\{Y\}\)`.

---

class: center middle bg-main1
count: false

# .text-hl[Naive Approach]

---

class: center bg-main1

.split-two[

.column[.content.vmiddle.center[
![](index_files/figure-html/met_img3-1.svg)&amp;lt;!-- --&amp;gt;
]]

.column[.content.vmiddle.center[
### `\(X^*_{k,1} = \{ X_{j, 1} : Y_k \subset Z_j  \}\)`
]]
]

---

class: center middle bg-main1

&amp;lt;br&amp;gt;

### `$$E[X^*_{k, 1}] = E[\{ X_{j, 1} : Y_k \subset Z_j \}]$$`

&amp;lt;br&amp;gt;

### `$$Var[X^*_{k, 1}] = Var[\{ X_{j, 1} : Y_k \subset Z_j \}]$$`

---

class: center middle bg-main2
count: false

# .text-hl[Voronoi Data Linkage]

---

class: center middle bg-main2

# Voronoi Tesselation

![](img/vor_ex.gif)

---

class: center middle bg-main2

.split-two[
.column[
.content.vmiddle.center[
![](index_files/figure-html/met_img4-1.svg)&amp;lt;!-- --&amp;gt;
]]

.column[
.content.vmiddle.center[
Now, we have a voronoi cell `\(V_k\)` associated to each point `\(Y_k\)`.
]]

]

---

class: center middle bg-main2

.split-two[
.column[
.content.vmiddle.center[
![](img/poly_inter.gif)
]]

.column[
.content.vmiddle.center[
### `\(p_{j, k} = \frac{Area(Z_j \cap V_k)}{Area(V_k)}\)`
]]
]

---

class: center middle bg-main2

### `\(X^*_{k, 1} = \sum_{i = 1}^{n_z} p_{i, k} X_{i, 1}\)`

--

&amp;lt;br&amp;gt;

### `\(E[X^*_{k, 1}] = \sum_{i = 1}^{n_z} p_{i, k} E[X_{i, 1}]\)`

--

### `\(Var[X^*_{k, 1}] = \sum_{i = 1}^{n_z} p^2_{i, k} Var[X_{i, 1}] + 2 \mathop{\sum \sum}_{i &amp;lt; j} p_{j, k} p_{i, k} Cov(X_{j, 1}, X_{i, 1})\)`

---

class: center middle bg-main3
count: false

# .text-hl[Recap]

---

class: bg-main3 middle

### Naive Approach

* `\(Var[X^*_{k, 1}] = Var[\{ X_{j, 1} : Y_k \subset Z_j \}]\)`
* Does not take advantage of all available data;
* More variability;
* Does inherit the autocovariance structure from data;

### Voronoi Data Linkage

* `\(Var[X^*_{k, 1}] = \sum_{i = 1}^{n_z} p^2_{i, k} Var[X_{i, 1}] + 2 \mathop{\sum \sum}_{i &amp;lt; j} p_{j, k} p_{i, k} Cov(X_{j, 1}, X_{i, 1})\)`
* Takes advatange of all available data;
* Less variability;
* Inherits the autocovariance structure from data;

---


class: bg-main1 split-30 hide-slide-number

.column.bg-main3[
]
.column.slide-in-right[
.sliderbox.bg-main2.vmiddle[
.font5[Application: Brazil Elections Data]
]]

---

class: bg-main1 middle

.center[# The Data]

* Data from .text-hl[electoral sections] for President in the city of .text-hl[SÃ£o Paulo] (2014) - .text-hl[Spatial Points];
      * Number of electors;
      * percent of votes in each candidate
* Socio demographic data from .text-hl[IBGE census sectros] (2010) - .text-hl[Spatial Polygons];
      * population, average income, household density, illiteracy rate, proportion of white people, proportion of women, and several variables about the proportion of people in different ages groups. 

---

class: bg-main1 middle

# Prediction

&amp;lt;img src=&#34;img/boxplot_pred.png&#34; width=600px&amp;gt;

---


class: bg-main1 split-30 hide-slide-number

.column.bg-main3[
]
.column.slide-in-right[
.sliderbox.bg-main2.vmiddle[
.font5[Conclusion]
]]

---

class: .bg-main1 middle center

# [&lt;i class=&#34;fas  fa-globe &#34;&gt;&lt;/i&gt;](https:://lcgodoy.github.io) lcgodoy.github.io
# &lt;i class=&#34;fas  fa-envelope-open &#34;&gt;&lt;/i&gt; lucasdac.godoy@gmail.com
# [&lt;i class=&#34;fab  fa-github &#34;&gt;&lt;/i&gt;](https:://github.com/lcgodoy) github.com/lcgodoy
    &lt;/textarea&gt;
&lt;script src=&#34;https://remarkjs.com/downloads/remark-latest.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;var slideshow = remark.create({
&#34;ratio&#34;: &#34;16:9&#34;,
&#34;highlightStyle&#34;: &#34;monokai-sublime&#34;,
&#34;highlightLines&#34;: true,
&#34;countIncrementalSlides&#34;: false,
&#34;seal&#34;: false
});
if (window.HTMLWidgets) slideshow.on(&#39;afterShowSlide&#39;, function (slide) {
  window.dispatchEvent(new Event(&#39;resize&#39;));
});
(function() {
  var d = document, s = d.createElement(&#34;style&#34;), r = d.querySelector(&#34;.remark-slide-scaler&#34;);
  if (!r) return;
  s.type = &#34;text/css&#34;; s.innerHTML = &#34;@page {size: &#34; + r.style.width + &#34; &#34; + r.style.height +&#34;; }&#34;;
  d.head.appendChild(s);
})();&lt;/script&gt;

&lt;script&gt;
(function() {
  var i, text, code, codes = document.getElementsByTagName(&#39;code&#39;);
  for (i = 0; i &lt; codes.length;) {
    code = codes[i];
    if (code.parentNode.tagName !== &#39;PRE&#39; &amp;&amp; code.childElementCount === 0) {
      text = code.textContent;
      if (/^\\\((.|\s)+\\\)$/.test(text) || /^\\\[(.|\s)+\\\]$/.test(text) ||
          /^\$\$(.|\s)+\$\$$/.test(text) ||
          /^\\begin\{([^}]+)\}(.|\s)+\\end\{[^}]+\}$/.test(text)) {
        code.outerHTML = code.innerHTML;  // remove &lt;code&gt;&lt;/code&gt;
        continue;
      }
    }
    i++;
  }
})();
&lt;/script&gt;
&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
(function () {
  var script = document.createElement(&#39;script&#39;);
  script.type = &#39;text/javascript&#39;;
  script.src  = &#39;https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML&#39;;
  if (location.protocol !== &#39;file:&#39; &amp;&amp; /^https?:/.test(script.src))
    script.src  = script.src.replace(/^https?:/, &#39;&#39;);
  document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script);
})();
&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>
